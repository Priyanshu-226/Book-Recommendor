// pages/api/recommend.js

import { Configuration, OpenAIApi } from "openai";
import books from "../../data/books.json";

const configuration = new Configuration({
  apiKey: process.env.OPENAI_API_KEY,
});
const openai = new OpenAIApi(configuration);

export default async function handler(req, res) {
  if (req.method !== "POST") return res.status(405).end();

  const { genres = [], favoriteBooks = "", tones = [], mood = [] } = req.body;

  const parts = [];
  if (favoriteBooks.trim()) parts.push(`I like ${favoriteBooks}`);
  if (genres.length) parts.push(`I'm into genres like ${genres.join(", ")}`);
  if (tones.length) parts.push(`with tones such as ${tones.join(", ")}`);
  if (mood.length) parts.push(`and my current mood is ${mood.join(", ")}`);

  const userPrompt = `${parts.join(". ")}. Recommend books.`;

  try {
    const response = await openai.createChatCompletion({
      model: "gpt-3.5-turbo",
      messages: [
        {
          role: "system",
          content: "You are a helpful book recommendation assistant. Respond with 3 book suggestions as JSON objects, each including title, author, and ISBN (if known)."
        },
        {
          role: "user",
          content: userPrompt
        }
      ]
    });

    const textResponse = response.data.choices[0].message.content;
    const recommendations = JSON.parse(textResponse);
    res.status(200).json({ recommendations });
  } catch (error) {
    console.error("OpenAI error:", error);
    res.status(500).json({ error: "Failed to generate recommendations" });
  }
}
